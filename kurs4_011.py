# Для реализации алгоритма проверки строки на палиндром я
# использовал итерационный перебор сравнения символов в строке.
# Алгоритм работает следующим образом:

# 1. Проходимся по первой половине символов в строке (в пределах от первого символа
#     до середины строки).
# 2. Сравниваем каждый символ в этой половине с соответствующим символом
#     во второй половине строки (с конца до середины).
# 3. Если хотя бы одна пара символов не совпадает, строка не является палиндромом
#     и функция возвращает False.
# 4. Если все символы соответствуют друг другу, функция возвращает True.

# Алгоритм эффективен и оптимален для данной задачи, так как не требует дополнительной
# памяти и имеет временную сложность O(n/2) или O(n), где n - длина строки.

def is_palindrome(s):
    for i in range(len(s) // 2):
        if s[i] != s[len(s) - i - 1]:
            return False
    return True

print('лепсспел')
print(is_palindrome('лепсспел'))
print()

print('True')
print(is_palindrome('True'))
print()

print('helloworld')
print(is_palindrome('helloworld'))
print()

print('False')
print(is_palindrome('False'))





